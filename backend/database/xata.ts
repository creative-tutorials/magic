// Generated by Xata Codegen 0.29.0. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "requests",
    columns: [
      { name: "appname", type: "string" },
      { name: "description", type: "string" },
      { name: "url", type: "string" },
      { name: "email", type: "string" },
      { name: "username", type: "string" },
    ],
  },
  {
    name: "approved",
    columns: [
      { name: "appicon", type: "string" },
      { name: "appname", type: "string" },
      { name: "description", type: "string" },
      { name: "url", type: "string" },
      { name: "creator", type: "string" },
      { name: "twitterUrl", type: "string" },
      { name: "category", type: "string" },
    ],
  },
  {
    name: "categories",
    columns: [
      { name: "name", type: "string" },
      { name: "gID", type: "string" },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Requests = InferredTypes["requests"];
export type RequestsRecord = Requests & XataRecord;

export type Approved = InferredTypes["approved"];
export type ApprovedRecord = Approved & XataRecord;

export type Categories = InferredTypes["categories"];
export type CategoriesRecord = Categories & XataRecord;

export type DatabaseSchema = {
  requests: RequestsRecord;
  approved: ApprovedRecord;
  categories: CategoriesRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL: "https://Timi-s-workspace-eouder.us-east-1.xata.sh/db/magic",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
